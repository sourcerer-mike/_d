@import '../../lib/twbs/bootstrap/scss/variables';
@import '../../lib/twbs/bootstrap/scss/mixins';
@import '../../lib/twbs/bootstrap/scss/normalize';
@import '../../lib/twbs/bootstrap/scss/reboot';
@import '../../lib/twbs/bootstrap/scss/grid';

// Row
//
// Rows contain and clear the floats of your columns.

@mixin add-grid($columns: $grid-columns, $gutter: $grid-gutter-width) {
  @if $enable-grid-classes {
    .row {
      @include make-row($gutter);
    }
  }

  // Columns
  //
  // Common styles for small and large grid columns

  @if $enable-grid-classes {
    @include add-grid-columns($columns, $gutter);
  }
}

@mixin add-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {

  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-right: ($gutter / 2);
    padding-left: ($gutter / 2);

    @if $enable-flex {
      width: 100%;
    }
  }

  $breakpoint-counter: 0;
  @each $breakpoint in map-keys($breakpoints) {
    $breakpoint-counter: ($breakpoint-counter + 1);

    @for $i from 1 through $columns {
      .col-#{$breakpoint}-#{$i}-#{$columns} {
        @extend %grid-column;
      }
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      @if $enable-flex {
        .col-#{$breakpoint}-#{$columns} {
          position: relative;
          flex-basis: 0;
          flex-grow: 1;
          max-width: 100%;
          min-height: 1px;
          padding-right: ($grid-gutter-width / 2);
          padding-left:  ($grid-gutter-width / 2);
        }
      }

      @for $i from 1 through $columns {
        .col-#{$breakpoint}-#{$i}-#{$columns} {
          @include make-col($i, $columns);
        }
      }

      @each $modifier in (pull, push) {
        @for $i from 0 through $columns {
          .#{$modifier}-#{$breakpoint}-#{$i}-#{$columns} {
            @include make-col-modifier($modifier, $i, $columns)
          }
        }
      }

      // `$columns - 1` because offsetting by the width of an entire row isn't possible
      @for $i from 0 through ($columns - 1) {
        @if $breakpoint-counter != 1 or $i != 0 { // Avoid emitting useless .offset-xs-0
          .offset-#{$breakpoint}-#{$i}-#{$columns} {
            @include make-col-modifier(offset, $i, $columns)
          }
        }
      }
    }
  }
}